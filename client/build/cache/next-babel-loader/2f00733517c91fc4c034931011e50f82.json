{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/velveet/Documents/coding/fullstack-pern/client/components/accounts.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\n\nvar Accounts = function Accounts(_ref) {\n  var accounts = _ref.accounts;\n  return __jsx(\"ul\", {\n    className: \"mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, accounts.map(function (account) {\n    return __jsx(\"li\", {\n      className: \"list-group-item list-group-item-action\",\n      key: account.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"row ml-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }\n    }, __jsx(\"h5\", {\n      className: \"d-flex\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }\n    }, account.id, \"-\", __jsx(\"div\", {\n      id: \"accountUrl/\".concat(account.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 61\n      }\n    }, account.account)), __jsx(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-secondary ml-auto mr-4\",\n      onClick: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n          var MILISECS, SECONDS, MINUTES, REPORT_PERIOD, accountUrl;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  try {\n                    e.preventDefault();\n                    MILISECS = 1000;\n                    SECONDS = 60;\n                    MINUTES = 0.5;\n                    REPORT_PERIOD = MINUTES * SECONDS * MILISECS;\n                    accountUrl = document.getElementById(\"accountUrl/\".concat(account.id)).innerText;\n                    setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                      var response;\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return axios.post('http://localhost:5000/mail', {\n                                account: accountUrl\n                              });\n\n                            case 2:\n                              response = _context.sent;\n                              console.log(response.data);\n\n                            case 4:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    })), REPORT_PERIOD);\n                  } catch (err) {\n                    console.error(err.message);\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }\n    }, \"Track Account\")));\n  }));\n};\n\n_c = Accounts;\nexport default Accounts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accounts\");","map":{"version":3,"sources":["/Users/velveet/Documents/coding/fullstack-pern/client/components/accounts.jsx"],"names":["axios","Accounts","accounts","map","account","id","e","preventDefault","MILISECS","SECONDS","MINUTES","REPORT_PERIOD","accountUrl","document","getElementById","innerText","setInterval","post","response","console","log","data","err","error","message"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAE7B,SACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,QAAQ,CAACC,GAAT,CAAa,UAAAC,OAAO;AAAA,WACpB;AAAI,MAAA,SAAS,EAAC,wCAAd;AAAuD,MAAA,GAAG,EAAEA,OAAO,CAACC,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBD,OAAO,CAACC,EAAhC,OAAoC;AAAK,MAAA,EAAE,uBAAgBD,OAAO,CAACC,EAAxB,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCD,OAAO,CAACA,OAA9C,CAApC,CAFJ,EAII;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAC,wCAFd;AAGI,MAAA,OAAO;AAAA,6EAAE,kBAAOE,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,sBAAI;AACAA,oBAAAA,CAAC,CAACC,cAAF;AACMC,oBAAAA,QAFN,GAEiB,IAFjB;AAGMC,oBAAAA,OAHN,GAGgB,EAHhB;AAIMC,oBAAAA,OAJN,GAIgB,GAJhB;AAKMC,oBAAAA,aALN,GAKsBD,OAAO,GAAGD,OAAV,GAAoBD,QAL1C;AAOMI,oBAAAA,UAPN,GAOmBC,QAAQ,CAACC,cAAT,sBAAsCV,OAAO,CAACC,EAA9C,GAAoDU,SAPvE;AAQAC,oBAAAA,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACehB,KAAK,CAACiB,IAAN,CAAW,4BAAX,EAAwC;AAACb,gCAAAA,OAAO,EAAEQ;AAAV,+BAAxC,CADf;;AAAA;AACFM,8BAAAA,QADE;AAERC,8BAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAD,IAGRV,aAHQ,CAAX;AAIH,mBAZD,CAYE,OAAOW,GAAP,EAAY;AACVH,oBAAAA,OAAO,CAACI,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACH;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADJ,CADoB;AAAA,GAApB,CAFR,CADJ;AAuCH,CAzCD;;KAAMvB,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import axios from 'axios'\n\nconst Accounts = ({accounts}) => {\n\n    return (\n        <ul className=\"mt-5\">\n            {\n                accounts.map(account => (\n                <li className=\"list-group-item list-group-item-action\" key={account.id}>\n                    <div className=\"row ml-2\">\n\n                        <h5 className=\"d-flex\">{account.id}-<div id={`accountUrl/${account.id}`}>{account.account}</div></h5>\n\n                        <button \n                            type=\"button\" \n                            className=\"btn btn-outline-secondary ml-auto mr-4\" \n                            onClick={async (e) =>Â {\n                                    try {\n                                        e.preventDefault();\n                                        const MILISECS = 1000;\n                                        const SECONDS = 60;\n                                        const MINUTES = 0.5;\n                                        const REPORT_PERIOD = MINUTES * SECONDS * MILISECS;\n                                        \n                                        const accountUrl = document.getElementById(`accountUrl/${account.id}`).innerText;\n                                        setInterval(async () => {\n                                            const response = await axios.post('http://localhost:5000/mail',{account: accountUrl});\n                                            console.log(response.data);\n                                        }, REPORT_PERIOD);\n                                    } catch (err) {\n                                        console.error(err.message);\n                                    }\n                            }} \n                        >\n                                Track Account\n                        </button>\n\n                    </div>\n                </li>\n                ))\n            }\n        </ul>\n    )\n}\n\nexport default Accounts"]},"metadata":{},"sourceType":"module"}