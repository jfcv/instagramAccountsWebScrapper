{"ast":null,"code":"var _jsxFileName = \"/Users/velveet/Documents/coding/fullstack-pern/client/components/addAccount.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\n\nconst AddAccount = ({\n  accounts,\n  setAccounts,\n  url\n}) => {\n  const onChange = e => {\n    setAccounts({\n      data: accounts.data,\n      url: e.target.value\n    });\n  };\n\n  const handleReset = () => {\n    Array.from(document.querySelectorAll(\"input\")).forEach(input => input.value = \"\");\n  };\n\n  const onSubmitForm = async e => {\n    try {\n      e.preventDefault();\n\n      if (accounts.url !== '') {\n        const response = await axios.post(url, {\n          account: accounts.url\n        });\n        setAccounts({\n          data: [...accounts.data, response.data.body],\n          url: ''\n        });\n        handleReset();\n      } else {\n        console.log('Empty form ! Fill it out !');\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return __jsx(\"form\", {\n    className: \"d-flex flex-column mt-5\",\n    onSubmit: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    id: \"inputText\",\n    type: \"text\",\n    className: \"form-control\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-primary mt-2\",\n    onClick: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Add Account\"));\n};\n\nexport default AddAccount;","map":{"version":3,"sources":["/Users/velveet/Documents/coding/fullstack-pern/client/components/addAccount.jsx"],"names":["axios","AddAccount","accounts","setAccounts","url","onChange","e","data","target","value","handleReset","Array","from","document","querySelectorAll","forEach","input","onSubmitForm","preventDefault","response","post","account","body","console","log","err","error","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA;AAAxB,CAAD,KAAkC;AAEjD,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpBH,IAAAA,WAAW,CAAC;AACRI,MAAAA,IAAI,EAAEL,QAAQ,CAACK,IADP;AAERH,MAAAA,GAAG,EAAEE,CAAC,CAACE,MAAF,CAASC;AAFN,KAAD,CAAX;AAIH,GALD;;AAOA,QAAMC,WAAW,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAX,EAA+CC,OAA/C,CACIC,KAAK,IAAKA,KAAK,CAACP,KAAN,GAAc,EAD5B;AAGH,GAJD;;AAMA,QAAMQ,YAAY,GAAG,MAAOX,CAAP,IAAa;AAE9B,QAAI;AACAA,MAAAA,CAAC,CAACY,cAAF;;AACA,UAAGhB,QAAQ,CAACE,GAAT,KAAiB,EAApB,EAAwB;AACpB,cAAMe,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAWhB,GAAX,EAAe;AAACiB,UAAAA,OAAO,EAAEnB,QAAQ,CAACE;AAAnB,SAAf,CAAvB;AACAD,QAAAA,WAAW,CAAC;AACRI,UAAAA,IAAI,EAAE,CAAC,GAAGL,QAAQ,CAACK,IAAb,EAAmBY,QAAQ,CAACZ,IAAT,CAAce,IAAjC,CADE;AAERlB,UAAAA,GAAG,EAAE;AAFG,SAAD,CAAX;AAIAM,QAAAA,WAAW;AACd,OAPD,MAOO;AACHa,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH;AACJ,KAZD,CAYE,OAAOC,GAAP,EAAY;AACVF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACH;AAEJ,GAlBD;;AAoBA,SACI;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAA0C,IAAA,QAAQ,EAAEV,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,EAAE,EAAC,WADP;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,SAAS,EAAC,cAHd;AAII,IAAA,QAAQ,EAAEZ,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,8BAFd;AAGI,IAAA,OAAO,EAAEY,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,CADJ;AAiBH,CApDD;;AAsDA,eAAehB,UAAf","sourcesContent":["import axios from 'axios';\n\nconst AddAccount = ({accounts, setAccounts, url}) => {\n\n    const onChange = (e) => {\n        setAccounts({\n            data: accounts.data,\n            url: e.target.value\n        });\n    }\n\n    const handleReset = () => {\n        Array.from(document.querySelectorAll(\"input\")).forEach(\n            input => (input.value = \"\")\n        );\n    }\n\n    const onSubmitForm = async (e) => {\n        \n        try {\n            e.preventDefault();\n            if(accounts.url !== '') {\n                const response = await axios.post(url,{account: accounts.url});\n                setAccounts({\n                    data: [...accounts.data, response.data.body],\n                    url: ''\n                });\n                handleReset();\n            } else {\n                console.log('Empty form ! Fill it out !');\n            }\n        } catch (err) {\n            console.error(err.message);\n        }\n        \n    }\n\n    return (\n        <form className=\"d-flex flex-column mt-5\" onSubmit={onSubmitForm}>\n            <input \n                id=\"inputText\"\n                type=\"text\" \n                className=\"form-control\" \n                onChange={onChange}\n            />\n            <button \n                type=\"button\" \n                className=\"btn btn-outline-primary mt-2\"\n                onClick={onSubmitForm}\n            >\n                Add Account\n            </button>\n        </form>\n    )\n}\n\nexport default AddAccount"]},"metadata":{},"sourceType":"module"}